--Nesse exercício, já criei os scripts com sequencia para entender como funciona no SQLServer

--TABELAS REFERENTES AO PRODUTO
CREATE TABLE TIPO(
    ID_TIPO INT NOT NULL,
    DESCRICAO VARCHAR(60),
    CONSTRAINT PK_TIPO PRIMARY KEY (ID_TIPO)
);
CREATE SEQUENCE SEQ_TIPO START WITH 1 INCREMENT BY 1 NO CYCLE;

CREATE TABLE MARCA(
    ID_MARCA INT NOT NULL,
    DESCRICAO VARCHAR(60),
    CONSTRAINT PK_MARCA PRIMARY KEY (ID_MARCA)
);
CREATE SEQUENCE SEQ_MARCA START WITH 1 INCREMENT BY 1 NO CYCLE;

CREATE TABLE PRODUTO(
    ID_PRODUTO INT NOT NULL,
    ID_TIPO INT NOT NULL,
    ID_MARCA INT NOT NULL,
    DESCRICAO VARCHAR(100),
    PRECO_UNITARIO DECIMAL(15,2),
    CONSTRAINT PK_PRODUTO PRIMARY KEY (ID_PRODUTO),
    CONSTRAINT FK_TIPO FOREIGN KEY (ID_TIPO) REFERENCES TIPO(ID_TIPO),
    CONSTRAINT FK_MARCA FOREIGN KEY (ID_MARCA) REFERENCES MARCA(ID_MARCA)
);
CREATE SEQUENCE SEQ_PRODUTO START WITH 1 INCREMENT BY 1 NO CYCLE;

--TABELAS REFERENTES A VENDAS
CREATE TABLE VENDA (
    ID_VENDA INT NOT NULL,
    NUM_NOTA_FISCAL VARCHAR(60),
    DATA_VENDA DATE,
    SUB_TOTAL DECIMAL(15, 2),
    PERC_DESCONTO DECIMAL(15,2),
    TOTAL DECIMAL(15,2),
    CONSTRAINT PK_VENDA PRIMARY KEY (ID_VENDA)
);
CREATE SEQUENCE SEQ_VENDA START WITH 1 INCREMENT BY 1 NO CYCLE;

CREATE TABLE ITENS_VENDA ( --Nessa tabela, o preco de venda pode ser diferente do unitário do produto, em caso de algum calculo de lucro (via software ou trigger)
  ID_ITENS_VENDA INT NOT NULL,
  ID_VENDA INT NOT NULL,
  ID_PRODUTO INT NOT NULL,
  PRECO_VENDA DECIMAL(15,2),
  QUANTIDADE DECIMAL(15,2),
  VALOR_TOTAL_ITEM DECIMAL(15,2),
  CONSTRAINT PK_ITENS_VENDA PRIMARY KEY (ID_ITENS_VENDA),
  CONSTRAINT FK_VENDA FOREIGN KEY (ID_VENDA) REFERENCES VENDA(ID_VENDA),
  CONSTRAINT FK_PRODUTO FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTO(ID_PRODUTO)
);
CREATE SEQUENCE SEQ_ITENS_VENDA START WITH 1 INCREMENT BY 1 NO CYCLE;

--ESTOQUE
--Adicionei quantidade minima e atual pensando na consistencia de estoque, caso tente realizar uma venda colocando mais produtos dos que existem atualmente em estoque.
--além disso, considerei relevante colocar o lote e a data que o lote foi adquirido, permitindo um melhor controle sobre os produtos
CREATE TABLE ESTOQUE ( 
  ID_ESTOQUE INT NOT NULL,
  ID_PRODUTO INT NOT NULL,
  QUANTIDADE_MINIMA DECIMAL(15,2),
  QUANTIDADE_ATUAL DECIMAL(15,2),
  LOTE VARCHAR(60),
  DT_LOTE DATE,
  CONSTRAINT PK_ESTOQUE PRIMARY KEY (ID_ESTOQUE),
  CONSTRAINT FK_PRODUTO FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTO(ID_PRODUTO)
);
CREATE SEQUENCE SEQ_ESTOQUE START WITH 1 INCREMENT BY 1 NO CYCLE;